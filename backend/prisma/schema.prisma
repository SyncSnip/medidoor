// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String?
  email      String   @unique
  password   String?  @db.VarChar(255)
  isVerified Boolean  @default(false)
  otp        String   @default("000000")
  isAdmin    Boolean  @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Product {
  prodId      Int         @id @default(autoincrement())
  name        String
  price       Float
  description String?
  quantity    String
  userId      Int
  prodTypeId  Int
  prodType    ProductType @relation(fields: [prodTypeId], references: [prodTypeId])
  reviews     Review[] // One-to-many relation with Review model
  Order       Order[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
}

model ProductType {
  prodTypeId  Int       @id @default(autoincrement())
  name        String
  description String
  typeCode    String
  image       String
  reviews     Review[]
  Product     Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
}

model Review {
  id         Int         @id @default(autoincrement())
  rating     Int         @default(0)
  comment    String?
  prodId     Int
  userId     Int
  product    Product     @relation(fields: [prodId], references: [prodId])
  prodType   ProductType @relation(fields: [prodTypeId], references: [prodTypeId])
  prodTypeId Int
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Payment {
  paymentId Int      @id @unique @default(autoincrement())
  userId    Int
  amount    BigInt
  method    String
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Order {
  orderId   Int      @unique @default(autoincrement())
  userId    Int
  prodId    Int
  product   Product  @relation(fields: [prodId], references: [prodId])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
